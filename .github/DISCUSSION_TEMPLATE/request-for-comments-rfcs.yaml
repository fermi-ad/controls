title: "[RFC] "
labels: ["rfc"]
body:
  - type: markdown
    attributes:
      value: |
        A brief explanation of the feature.

  - type: textarea
    attributes:
      label: Basic example
      description: |
        If the proposal involves a new or changed API, include a basic example.
        Omit this section if it's not applicable.

  - type: textarea
    attributes:
      label: Motivation
      description: |
        Why are we doing this? What use cases does it support? What is the expected outcome?

        Please explain the motivation so that if this RFC is not accepted, the motivation could be used to develop alternative solutions. In other words, enumerate the constraints you are trying to solve without coupling them too closely to the solution you have in mind.

  - type: textarea
    attributes:
      label: Detailed design
      description: |
        This is the bulk of the RFC. Explain the design in enough detail for somebody familiar with the control system to understand and for somebody familiar with the implementation to implement. This should get into specifics and corner cases and include examples of how the feature is used. Any new terminology should be defined here.

  - type: textarea
    attributes:
      label: Drawbacks
      description: |
        Why should we _not_ do this? Please consider:

        - implementation cost, both in terms of size and complexity
        - the impact of teaching people to use the control system
        - integration of this feature with other existing and planned features
        - the cost of migrating existing control system components (is it a breaking change?)

        There are tradeoffs to choosing any path. Attempt to identify them here.

  - type: textarea
    attributes:
      label: Alternatives
      description: |
        What other designs have been considered? What is the impact of not doing this?

  - type: textarea
    attributes:
      label: Adoption strategy
      description: |
        If we implement this proposal, how will existing Gatsby developers adopt it? Is
        this a breaking change? Can we write a codemod? Should we coordinate with
        other projects or libraries?

  - type: textarea
    attributes:
      label: How we teach this
      description: |
        What names and terminology work best for these concepts and why? How is this
        idea best presented? As a continuation of existing Gatsby patterns?

        Would the acceptance of this proposal mean the Gatsby documentation must be
        re-organized or altered? Does it change how Gatsby is taught to new developers
        at any level?

        How should this feature be taught to existing Gatsby developers?

  - type: textarea
    attributes:
      label: Unresolved questions
      description: |
        Optional, but suggested for first drafts. What parts of the design are still
        TBD?

# This documentation was seeded from: https://www.gatsbyjs.com/contributing/rfc-process/#what-the-process-is_
